//
//  DeviceDelegateHelper.m
//  ChuJinZhaoPin
//
//  Created by eims on 2018/12/7.
//  Copyright © 2018 Monster. All rights reserved.
//

#import "DeviceDelegateHelper.h"
#import "AppDelegate.h"

@implementation DeviceDelegateHelper
//如需使用IM功能，需实现ECChatDelegate类的回调函数。
//如需使用实时音视频功能，需实现ECVoIPCallDelegate类的回调函数。
//如需使用音视频会议功能，需实现ECMeetingDelegate类的回调函数。

+(DeviceDelegateHelper*)sharedInstance
{
    static DeviceDelegateHelper *devicedelegatehelper;
    
    static dispatch_once_t devicedelegatehelperonce;
    
    dispatch_once(&devicedelegatehelperonce, ^{
        
        devicedelegatehelper = [[DeviceDelegateHelper alloc] init];
    });
    return devicedelegatehelper;
}

/**
 @brief 连接状态接口
 @discussion 监听与服务器的连接状态 V5.0版本接口
 @param state 连接的状态
 @param error 错误原因值
 */
-(void)onConnectState:(ECConnectState)state failed:(ECError*)error {
    
    switch (state) {
            
        case State_ConnectSuccess://连接成功
            
            [[NSNotificationCenter defaultCenter] postNotificationName:KNOTIFICATION_onConnected_Success object:
             [ECError errorWithCode:ECErrorType_NoError]];
            
            break;
            
        case State_Connecting://正在连接
            
            [[NSNotificationCenter defaultCenter] postNotificationName:KNOTIFICATION_onConnected_Connecting object:
             [ECError errorWithCode:ECErrorType_Connecting]];
            
            break;
            
        case State_ConnectFailed://失败
            
            [[NSNotificationCenter defaultCenter] postNotificationName:KNOTIFICATION_onConnected_Failed object:error];
            
            break;
        default:
            break;
    }
}

- (void)onReceiveMessage:(ECMessage *)message{
    [HUD showHUDError:nil title:@"收到消息"];
    NSLog(@"收到%@的消息,属于%@会话", message.from, message.sessionId);
    
    [[NSNotificationCenter defaultCenter] postNotificationName:KNOTIFICATION_ReceiveMessage object:@{@"msg":message}];
    
    switch(message.messageBody.messageBodyType){
            
    case MessageBodyType_Text:{
        ECTextMessageBody *msgBody = (ECTextMessageBody *)message.messageBody;
        NSLog(@"收到的是文本消息------%@,msgBody.text");
        break;
    }
    case MessageBodyType_Voice:{
        ECVoiceMessageBody *msgBody = (ECVoiceMessageBody *)message.messageBody;
        NSLog(@"音频文件remote路径------%@",msgBody. remotePath);
        break;
    }
    case MessageBodyType_Video:{
        ECVideoMessageBody *msgBody = (ECVideoMessageBody *)message.messageBody;
        NSLog(@"视频文件remote路径------%@",msgBody. remotePath);
        break;
    }
    case MessageBodyType_Image:{
        ECImageMessageBody *msgBody = (ECImageMessageBody *)message.messageBody;
        NSLog(@"图片文件remote路径------%@",msgBody. remotePath);
        NSLog(@"缩略图片文件remote路径------%@",msgBody. thumbnailRemotePath);
        break;
    }
    case MessageBodyType_File:{
        ECFileMessageBody *msgBody = (ECFileMessageBody *)message.messageBody;
        NSLog(@"文件remote路径------%@",msgBody. remotePath);
        break;
    }
    default:
    break;}
}
@end
