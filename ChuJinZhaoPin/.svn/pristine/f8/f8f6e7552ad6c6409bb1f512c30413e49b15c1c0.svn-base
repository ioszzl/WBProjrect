//
//  UploadImageTableViewCell.m
//  ChuJinZhaoPin
//
//  Created by eims on 2018/11/12.
//  Copyright © 2018 Monster. All rights reserved.
//

#import "UploadImageTableViewCell.h"
#import "UploadImageView.h"
#import "XWScanImage.h"
#import <Photos/Photos.h>
#import "CLAlertView.h"
#import "RHNetAPIManager+Request.h"
#import "RHNetAPIManager.h"
@interface UploadImageTableViewCell()
@property (nonatomic, strong) NSMutableArray<UploadImageView *> *imgViewArr;
@end

@implementation UploadImageTableViewCell

-(instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier{
    self = [super initWithStyle:style reuseIdentifier:reuseIdentifier];
    if (self) {
        self.selectionStyle = UITableViewCellSelectionStyleNone;
        [self initUI];
    }
    return self;
}
-(void)initUI{
    self.backgroundColor = RGBCOLOR(255, 255, 255);
    self.bgV = [[UIView alloc]initWithFrame:CGRectMake(0, 0, kScreenWidth, Size(206/2))];
    self.bgV.backgroundColor = HEXRGBCOLOR(0xffffff);
    self.cellH = self.bgV.height;
    [self.contentView addSubview:self.bgV];
    
    
    UIButton *imgBtn = [[UIButton alloc]initWithFrame:CGRectMake(Size(10), Size(8), Size(135/2), Size(135/2))];
    imgBtn.layer.cornerRadius = Size(5);
    imgBtn.layer.borderColor = COLOR_RGB_line.CGColor;
    imgBtn.layer.borderWidth = 0.5;
    imgBtn.clipsToBounds = YES;
    [imgBtn setImage:[UIImage imageNamed:@"上传"] forState:UIControlStateNormal];
    [imgBtn setImageEdgeInsets:UIEdgeInsetsMake(Size(9), Size(9), Size(9), Size(9))];
    [imgBtn addTarget:self action:@selector(doAddimgBtn) forControlEvents:UIControlEventTouchUpInside];
    [self.bgV addSubview:imgBtn];
    self.imgBtn = imgBtn;
}

-(void)setImgUrlMuarr:(NSArray *)imgUrlMuarr{
    
    if (imgUrlMuarr.count > 0 && ![_imgUrlMuarr isEqualToArray:imgUrlMuarr]) {
        _imgUrlMuarr = imgUrlMuarr;
        
        for (UploadImageView *v in self.imgViewArr) {
            [v removeFromSuperview];
            [self.imgViewArr removeAllObjects];
        }
        for (int i=0; i<imgUrlMuarr.count; i++) {
            
            NSInteger count = (NSInteger)((kScreenWidth-Size(20))/Size(135/2+10));
            
            UploadImageView *imgv = [[UploadImageView alloc]initWithFrame:CGRectMake(i % count * Size(135/2+10) + Size(15), Size(8) + i / count * Size(135/2+10), Size(135/2), Size(135/2))];
            NSDictionary *dic = imgUrlMuarr[i];
            [imgv.imgV sd_setImageWithURL:[NSURL URLWithString:[dic valueForKey:@"imgUrl"]]];
            //imgv.image = self.imgUrlMuarr[i];
            [self.bgV addSubview:imgv];
            
            UITapGestureRecognizer *tapGestureRecognizer = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(scanBigImageClick:)];
            imgv.imgV.userInteractionEnabled = YES;
            [imgv.imgV addGestureRecognizer:tapGestureRecognizer];
            
            [self.imgViewArr addObject:imgv];
            
        }
        
        NSInteger count = (NSInteger)((kScreenWidth-Size(20))/Size(135/2+10));
        
        self.bgV.height = Size(206/2) + imgUrlMuarr.count / count * Size(135/2+10);
        self.cellH = self.bgV.height;
        
        if (imgUrlMuarr.count < self.multiCount) {
            self.imgBtn.left = imgUrlMuarr.count%count * Size(135/2+10) + Size(10);
            self.imgBtn.top = Size(8) + imgUrlMuarr.count / count * Size(135/2+10);
            //BLOCK_EXEC(self.imgBtnBlock);
            self.imgBtn.hidden = NO;
        }else{
            self.imgBtn.hidden = YES;
        }
    }
    
}

-(void)scanBigImageClick:(UITapGestureRecognizer *)gesRec{
    UIImageView *clickedImageView = (UIImageView *)gesRec.view;
    if (!clickedImageView.image) {
        return;
    }
    [XWScanImage scanBigImageWithImageView:clickedImageView];
}

//添加照片
-(void)doAddimgBtn{
    CLAlertView *alertV = [CLAlertView globeBottomView];
    alertV.titleArray = @[@"拍照",@"选择相册"];
    alertV.title = @"上传图片";
    [alertV show];
    alertV.globeBottomView = ^(NSInteger index, NSString *string) {
        
        //初始化UIImagePickerController类
        UIImagePickerController * picker = [[UIImagePickerController alloc] init];
        //picker.
        //设置代理
        picker.delegate = self;
        
        if (index == 1) {//相册
            [PHPhotoLibrary requestAuthorization:^(PHAuthorizationStatus status) {
                NSLog(@"status == %ld",(long)status);
                //未授权
                if (status == PHAuthorizationStatusDenied ||
                    status == PHAuthorizationStatusRestricted){
                    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"提示" message:@"请前往设置->隐私->相册 授权应用访问相册权限" preferredStyle:UIAlertControllerStyleAlert];
                    UIAlertAction *aleAc = [UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:nil];
                    [alert addAction:aleAc];
                    dispatch_sync(dispatch_get_main_queue(), ^{
                        [self.ym_getCurrentNavigationController presentViewController:alert animated:YES completion:nil];
                    });
                    
                    
                }else{
                    
                    picker.sourceType = UIImagePickerControllerSourceTypeSavedPhotosAlbum;
                    dispatch_sync(dispatch_get_main_queue(), ^{
                        [self.ym_getCurrentViewController presentViewController:picker animated:YES completion:nil];
                    });
                }
            }];
            
        }
        if(index == 0){//相机
            //判断是否有相机
            if([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera]){
                //请求授权
                [AVCaptureDevice requestAccessForMediaType:AVMediaTypeVideo completionHandler:^(BOOL granted) {
                    if (!granted) {//不允许使用相机
                        UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"提示" message:@"请前往设置->隐私->相机 授权应用使用相机权限" preferredStyle:UIAlertControllerStyleAlert];
                        UIAlertAction *aleAc = [UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:nil];
                        [alert addAction:aleAc];
                        [self.ym_getCurrentNavigationController presentViewController:alert animated:YES completion:nil];
                    }else{//允许使用相机
                        picker.sourceType = UIImagePickerControllerSourceTypeCamera;
                        [self.ym_getCurrentViewController presentViewController:picker animated:YES completion:nil];
                    }
                }];
                
            }else{
                [HUD showHUDError:nil title:@"该设备不支持拍照"];
            }
            
        }
        
    };
}

//选择完成回调函数
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary<NSString *,id> *)info{
    //获取图片
    UIImage *image = info[UIImagePickerControllerOriginalImage];
    NSData *data = UIImageJPEGRepresentation(image, 1);
    NSString *base64str;
    if (data.length/1024.0 > 10240) {
        NSData *ddata = [image ym_compressQualityWithMaxLength:10*1024*1024];
        NSLog(@"原：%fKB  压：%fKB",data.length/1024.0, ddata.length/1024.0);
        base64str = [[UIImage imageWithData:ddata] ym_base64String];
    }
    else {
        base64str = [[UIImage imageWithData:data] ym_base64String];
    }
    
    NSMutableDictionary *paramDic = [NSMutableDictionary dictionary];
    [paramDic setValue:[NSString stringWithFormat:@"%@.jpg",[[NSDate date] stringWithFormat:@"yyyyMMdd_HHmmss"]] forKey:@"picName"];
    [paramDic setValue:base64str forKey:@"imgurl"];
    [[RHNetAPIManager sharedManager]appUploadFileOPT:paramDic].start(^(id data, NSString *msg, NSInteger code, NSError *error) {
      
        if (data) {
            NSString *imgUrl = [data[@"data"] valueForKey:@"imgUrl"];
            NSString *imgId = [[data[@"data"] valueForKey:@"tCjImgSource"]valueForKey:@"id"];
            NSDictionary *dic = @{@"imgUrl":imgUrl,@"imgId":imgId};
            NSMutableArray *temp = [NSMutableArray array];
            [temp addObject:dic];//data[@"returnMap"][@"imgurl"]
            
            BLOCK_EXEC(self.imgBtnBlock,temp);
            
            //NSLog(@"%@",data[@"returnMap"][@"imgurl"]);
            [self.ym_getCurrentViewController dismissViewControllerAnimated:YES completion:nil];
        }
        //[self.ym_getCurrentViewController dismissViewControllerAnimated:YES completion:nil];
    });
    
}
#pragma mark - 懒加载

- (NSMutableArray<UploadImageView *> *)imgViewArr{
    if (!_imgViewArr) {
        _imgViewArr = [NSMutableArray array];
    }
    return _imgViewArr;
}

- (void)awakeFromNib {
    [super awakeFromNib];
    // Initialization code
}

- (void)setSelected:(BOOL)selected animated:(BOOL)animated {
    [super setSelected:selected animated:animated];

    // Configure the view for the selected state
}

@end
