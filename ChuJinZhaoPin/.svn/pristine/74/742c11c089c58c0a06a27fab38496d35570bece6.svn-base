//
//  PayEditViewController.m
//  ChuJinZhaoPin
//
//  Created by eims on 2018/11/14.
//  Copyright © 2018 Monster. All rights reserved.
//

#import "PayEditViewController.h"
#import "MineInfoTableViewCell.h"
#import "YMTextView.h"
@interface PayEditViewController ()<UITableViewDelegate,UITableViewDataSource,UITextFieldDelegate,UITextViewDelegate>{
    
}
@property (nonatomic, strong) UITableView *tableV;
@property (nonatomic, strong) NSMutableArray<UIButton *> *btnMuArr;

@property (nonatomic, strong) YMTextView *planTextV;
@property (nonatomic, strong) UITextField *totalPayTF;
@property (nonatomic, strong) UITextField *badePayTF;

@property (nonatomic, strong) NSArray<Scale *> *itemArr;
@end

@implementation PayEditViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    _itemArr = AppDelegateInstance.gloableModel.data.salary;
    [self initUI];
    
    if (!self.postInitData) {
        self.postInitData = [[PositionInitData alloc]init];
    }
}
-(void)initUI{
    self.title = @"薪资待遇";
    
    UIBarButtonItem *item = [[UIBarButtonItem alloc]initWithTitle:@"保存" style:UIBarButtonItemStyleDone target:self action:@selector(doSaveItem)];
    self.navigationItem.rightBarButtonItem = item;
   
    _tableV = [[UITableView alloc]initWithFrame:CGRectZero style:UITableViewStyleGrouped];
    _tableV.separatorStyle = UITableViewCellSeparatorStyleNone;
    _tableV.showsVerticalScrollIndicator = NO;
    _tableV.showsHorizontalScrollIndicator = NO;
    _tableV.backgroundColor = COLOR_BG;
    _tableV.dataSource = self;
    _tableV.delegate = self;
    _tableV.contentInset = UIEdgeInsetsMake(Size(10), 0, 0, 0);
    [self.view addSubview:_tableV];
    [_tableV mas_makeConstraints:^(MASConstraintMaker *make) {
        make.edges.equalTo(self.view);
    }];
    _tableV.rowHeight = Size(120/2);
}
#pragma mark - action
-(void)doSaveItem{
    [self.view endEditing:YES];
    
    NSMutableDictionary *dataDic = [NSMutableDictionary dictionary];
    [dataDic setValue:self.postInitData.post.ID == 0 ? @"" : NSStringFromInteger(self.postInitData.post.ID) forKey:@"postId"];
    [dataDic setValue:self.postInitData.post.job_name forKey:@"jobName"];
    [dataDic setValue:NSStringFromInteger(self.postInitData.post.salary_range_id) forKey:@"salaryRangeId"];
    
    [dataDic setValue:self.postInitData.post.total_pay forKey:@"totalPay"];
    [dataDic setValue:self.postInitData.post.basic_pay forKey:@"basicPay"];
    [dataDic setValue:self.postInitData.post.pay_plan forKey:@"payPlan"];
    [dataDic setValue:self.postInitData.post.work_requirement forKey:@"workRequirement"];
    [dataDic setValue:@"1" forKey:@"status"];
    
    NSMutableDictionary *paramDic = [NSMutableDictionary dictionary];
    [paramDic setValue:[dataDic mj_JSONString] forKey:@"data"];
    [paramDic setValue:AppDelegateInstance.token forKey:@"token"];
    
    [[RHNetAPIManager sharedManager]appAddPostOPT:paramDic].start(^(id data, NSString *msg, NSInteger code, NSError *error) {
        if (data) {
            if (code == 5000) {//认证通过之后未交入驻押金前为试用期,试用期只能发布3个岗位,另一种情况为非试用期,但入驻押金少于1000,同样不能发布职位,会返回5000,这时,请跳转充值页面
                [HUD showHUDError:nil title:data[@"data"]];
                return ;
            }
            [HUD showHUDError:nil title:@"已保存"];
            [self.navigationController popViewControllerAnimated:YES];
        }
    });
}
-(void)doItemBtn:(UIButton *)btn{
    for (UIButton *btt in self.btnMuArr) {
        btt.selected = NO;
    }
    btn.selected = YES;
    
    self.postInitData.post.salary_range_id = btn.tag;
}
#pragma mark - tableview deleagte
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return 2;
}
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    if (section == 0) {
        return 1;
    }
    return 2;
}
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    CELL_DEFINE(MineInfoTableViewCell);
    cell.arrowImgV.hidden = YES;
    cell.line.hidden = NO;
    [cell.textF mas_remakeConstraints:^(MASConstraintMaker *make) {
        make.right.mas_offset(-Size(15));
        make.centerY.equalTo(cell.contentView);
    }];
    if (indexPath.section == 0) {
        cell.titleLab.text = @"薪资范围";
        cell.textF.hidden = YES;
        cell.line.hidden = YES;
    }else{
        cell.textF.hidden = NO;
        cell.textF.enabled = YES;
        switch (indexPath.row) {
            case 0:{
                cell.titleLab.text = @"综合工资";
                cell.textF.placeholder = @"请填写";
                cell.textF.text = self.postInitData.post.total_pay;
                self.totalPayTF = cell.textF;
                self.totalPayTF.delegate = self;
            }
                break;
            case 1:{
                cell.titleLab.text = @"基本工资";
                //cell.textF.enabled = NO;
                cell.textF.placeholder = @"请填写";
                cell.textF.text = self.postInitData.post.basic_pay;
                self.badePayTF = cell.textF;
                self.badePayTF.delegate = self;
            }
                break;
            default:
                break;
        }
    }
    return cell;
}
-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    return [UIView new];
}
-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    return CGFLOAT_MIN;
}
-(UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section{
    if (section == 0) {
        UIView *view = [UIView new];
        view.backgroundColor = RGBCOLOR(255, 255, 255);
        view.frame = CGRectMake(0, 0, kScreenWidth, Size(10) + Size(30+5)*_itemArr.count);
        CGFloat btnW = (kScreenWidth-Size(30)-Size(10)*3)/4;
        for (int i=0; i<_itemArr.count; i++) {
            UIButton *btn = [UIButton ym_ButtonWithFrame:CGRectMake(Size(15)+(btnW + Size(10))*(i%4), Size(5)+Size(30+5)*(i/4), btnW, Size(30)) title:_itemArr[i].value backgroundColor:COLOR_BG titleColor:COLOR_RGB_51 titleSize:Size(14)];
//            btn.layer.cornerRadius = Size(4);
//            btn.clipsToBounds = YES;
            btn.tag = _itemArr[i].ID;
            [btn setBackgroundImage:[UIImage ym_imageWithColor:COLOR_MAIN_ENTERPRISE size:btn.size] forState:UIControlStateSelected];
            [view addSubview:btn];
            [btn addTarget:self action:@selector(doItemBtn:) forControlEvents:UIControlEventTouchUpInside];
            [self.btnMuArr addObject:btn];
            
            if (self.postInitData.post.salary_range_id == _itemArr[i].ID) {
                btn.selected = YES;
            }
        }
        
        return view;
    }
    if (section == 1) {
        UIView *view = [[UIView alloc]initWithFrame:CGRectMake(0, 0, kScreenWidth, Size(294/2))];
        view.backgroundColor = RGBCOLOR(255, 255, 255);
        
        UILabel *lab = [UILabel ym_labelWithFrame:CGRectZero font:FONT_SIZE_15 textColor:COLOR_RGB_51];
        lab.text = @"发薪安排";
        [view addSubview:lab];
        [lab mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.left.mas_offset(Size(15));
        }];
        
        YMTextView *planTextV = [YMTextView new];
        planTextV.placeholder = @"请填写发薪安排";
        planTextV.textColor = COLOR_RGB_102;
        planTextV.font = [UIFont systemFontOfSize:Size(15)];
        [view addSubview:planTextV];
        [planTextV mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.mas_offset(Size(15));
            make.top.equalTo(lab.mas_bottom).mas_offset(Size(15));
            make.right.bottom.mas_offset(-Size(15));
        }];
        planTextV.text = self.postInitData.post.pay_plan;
        self.planTextV = planTextV;
        self.planTextV.delegate = self;
        return view;
    }
    return [UIView new];
}
-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    if (section == 0) {
        return Size(30+5)*(_itemArr.count%4 == 0 ? _itemArr.count/4 : _itemArr.count/4+1);
    }else{
        return Size(294/2);
    }
    return CGFLOAT_MIN;
}

#pragma mark - textview/textField delegate
- (void)textFieldDidEndEditing:(UITextField *)textField{
    if (textField == self.totalPayTF) {
        self.postInitData.post.total_pay = textField.text;
    }
    if (textField == self.badePayTF) {
        self.postInitData.post.basic_pay = textField.text;
    }
}
-(void)textViewDidEndEditing:(UITextView *)textView{
    self.postInitData.post.pay_plan = textView.text;
}

#pragma mark - 懒加载
-(NSMutableArray<UIButton *> *)btnMuArr{
    if (!_btnMuArr) {
        _btnMuArr = [NSMutableArray array];
    }
    return _btnMuArr;
}
/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
