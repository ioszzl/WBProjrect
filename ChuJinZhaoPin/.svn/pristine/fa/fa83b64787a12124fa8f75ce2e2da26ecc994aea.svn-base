//
//  ResumeListViewController.m
//  ChuJinZhaoPin
//
//  Created by eims on 2018/11/13.
//  Copyright © 2018 Monster. All rights reserved.
//

#import "ResumeListViewController.h"
#import "CompanyHomeCell.h"
#import "ResumeListTableViewCell.h"
#import "InterviewNoteNoticeViewController.h"
#import "CJChoseAlertView.h"
#import "InterviewReasonAlertView.h"
#import "ResumeListModel.h"
#import "InterviewInitModel.h"
#import "ResumeDetailViewController.h"
#import "ChatViewController.h"
@interface ResumeListViewController ()<UITableViewDelegate,UITableViewDataSource>{
    NSInteger _pageNum;
    
    NSInteger _currentIndex;
}
@property (nonatomic, strong) UITableView *tableV;
@property (nonatomic, strong) NSMutableArray<UIButton *> *topBtnArr;
@property (nonatomic, strong) UIView *btnLine;
@property (nonatomic, strong) NSArray<ResumeList *> *dataSource;

@property (nonatomic, strong) NSMutableDictionary *paramDataDic;


@end

@implementation ResumeListViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    _currentIndex = 0;
    [self initUI];
}
-(void)viewDidAppear:(BOOL)animated{
    [super viewDidAppear:animated];
    
    [self doTopBtn:self.topBtnArr[_currentIndex]];
}
-(void)initUI{
    self.title = @"简历列表";
    
    UIView *topView = [UIView new];
    topView.backgroundColor = RGBCOLOR(255, 255, 255);
    topView.layer.borderColor = COLOR_RGB_line.CGColor;
    topView.layer.borderWidth = 0.5;
    [self.view addSubview:topView];
    [topView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.top.right.mas_offset(0);
        make.height.mas_equalTo(Size(50));
    }];
    
    NSArray *arr = @[@"全部",@"待处理",@"待面试",@"已结束"];
    for (int i=0; i<arr.count; i++) {
        UIButton *btn = [UIButton ym_ButtonWithFrame:CGRectZero title:arr[i] backgroundColor:nil titleColor:COLOR_RGB_51 titleSize:Size(15)];
        [btn setTitleColor:COLOR_MAIN_ENTERPRISE forState:UIControlStateSelected];
        [topView addSubview:btn];
        [btn mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.mas_offset(kScreenWidth/arr.count*i);
            make.top.bottom.mas_offset(0);
            make.width.mas_equalTo(kScreenWidth/arr.count);
        }];
        btn.tag = i;
        [self.topBtnArr addObject:btn];
        [btn addTarget:self action:@selector(doTopBtn:) forControlEvents:UIControlEventTouchUpInside];
        if ( i==0 ) {
            btn.selected = YES;
        }
    }
    
    _btnLine = [UIView new];
    _btnLine.backgroundColor = COLOR_MAIN_ENTERPRISE;
    [topView addSubview:_btnLine];
    [_btnLine mas_makeConstraints:^(MASConstraintMaker *make) {
        make.bottom.equalTo(topView);
        make.width.mas_equalTo(Size(45));
        make.height.mas_equalTo(1);
        make.centerX.equalTo(self.topBtnArr.firstObject);
    }];
    
    
   
    _tableV = [[UITableView alloc]initWithFrame:CGRectZero style:UITableViewStylePlain];
    _tableV.tableFooterView = [UIView new];
    _tableV.separatorStyle = UITableViewCellSeparatorStyleNone;
    _tableV.showsVerticalScrollIndicator = NO;
    _tableV.showsHorizontalScrollIndicator = NO;
    _tableV.backgroundColor = COLOR_BG;
    _tableV.dataSource = self;
    _tableV.delegate = self;
    _tableV.contentInset = UIEdgeInsetsMake(Size(5), 0, 0, 0);
    [self.view addSubview:_tableV];
    [_tableV mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(topView.mas_bottom);
        make.left.right.bottom.mas_offset(0);
    }];
    _tableV.rowHeight = UITableViewAutomaticDimension;
    
    _tableV.mj_header = [YMRefreshHeader ym_headerWithRefreshingsBlock:^{
        _pageNum = 1;
        [self requestListData];
    } animated:NO];
    
    _tableV.mj_footer = [YMRefreshFooter ym_footerWithRefreshingsBlock:^{
        _pageNum++;
        [self requestListData];
    } animated:NO];
    
    
}
#pragma mark - request
-(void)requestListData{
    
    [self.paramDataDic setValue:self.workPosition forKey:@"workPosition"];
    
    NSMutableDictionary *pageDic = [NSMutableDictionary dictionary];
    [pageDic setValue:NSStringFromInteger(_pageNum) forKey:@"currPage"];
    [pageDic setValue:@"10" forKey:@"pageSize"];
    
    NSMutableDictionary *paramDic = [NSMutableDictionary dictionary];
    [paramDic setValue:[self.paramDataDic mj_JSONString] forKey:@"data"];
    [paramDic setValue:AppDelegateInstance.token forKey:@"token"];
    [paramDic setValue:[pageDic mj_JSONString] forKey:@"page"];
    
    [[RHNetAPIManager sharedManager]appResumeCentralOPT:paramDic].start(^(id data, NSString *msg, NSInteger code, NSError *error) {
        if (data) {
            
            ResumeListModel *model = [ResumeListModel mj_objectWithKeyValues:data];
            if (model.data.list.count == 0) {
                [HUD showHUDError:nil title:@"暂无数据"];
            }
            if (_pageNum == 1) {
                self.dataSource = model.data.list;
                [self.tableV.mj_header endRefreshing];
                [self.tableV.mj_footer resetNoMoreData];
            }else{
                NSMutableArray *temp = [NSMutableArray arrayWithArray:self.dataSource];
                [temp addObjectsFromArray:model.data.list];
                self.dataSource = [temp copy];
            }
            if (model.data.isLastPage) {
                [self.tableV.mj_footer endRefreshingWithNoMoreData];
            }else{
                [self.tableV.mj_footer endRefreshing];
            }
            
            [self.tableV reloadData];
            
            
        }else{
            [self.tableV.mj_header endRefreshing];
            [self.tableV.mj_footer endRefreshing];
        }
        
    });
}
#pragma mark - action
-(void)doTopBtn:(UIButton *)btn{
    for (UIButton *btt in self.topBtnArr) {
        btt.selected = NO;
    }
    btn.selected = YES;
    
    [UIView animateWithDuration:.2f animations:^{
        self.btnLine.centerX = btn.centerX;
    }];
    _currentIndex = btn.tag;
    _pageNum = 1;
    if ([btn.titleLabel.text isEqualToString:@"全部"]) {
        [self.paramDataDic setValue:@"" forKey:@"type"];
    }
    if ([btn.titleLabel.text isEqualToString:@"待处理"]) {
        [self.paramDataDic setValue:@"0" forKey:@"type"];
    }
    
    if ([btn.titleLabel.text isEqualToString:@"待面试"]) {
        [self.paramDataDic setValue:@"2" forKey:@"type"];
    }
    if ([btn.titleLabel.text isEqualToString:@"已结束"]) {
        [self.paramDataDic setValue:@"6" forKey:@"type"];
    }
    [self requestListData];
    //[self.tableV scrollRectToVisible:CGRectMake(0, 0, 1, 1) animated:NO];
    //self.tableV.contentOffset = CGPointMake(0, CGFLOAT_MIN);
    if (self.dataSource.count > 0) {
        [self.tableV scrollToRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:0] atScrollPosition:UITableViewScrollPositionTop animated:NO];
    }
    
}

#pragma mark - tableview delegate
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return self.dataSource.count;
}
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    CELL_DEFINE(ResumeListTableViewCell);
    ResumeList *list = self.dataSource[indexPath.row];
    cell.resumeList = list;
    
    
    cell.oneBtnBlock = cell.twoBtnBlock;
    
    cell.twoBtnBlock = ^(UIButton *btn) {
        if ([btn.titleLabel.text isEqualToString:@"邀请面试"]){
            NSMutableDictionary *dataDic = [NSMutableDictionary dictionary];
            [dataDic setValue:NSStringFromInteger(list.metting_id) forKey:@"metId"];
            
            NSMutableDictionary *paramDic = [NSMutableDictionary dictionary];
            [paramDic setValue:[dataDic mj_JSONString] forKey:@"data"];
            [paramDic setValue:AppDelegateInstance.token forKey:@"token"];
            
            [[RHNetAPIManager sharedManager]appToInterviewNoticeOPT:paramDic].start(^(id data, NSString *msg, NSInteger code, NSError *error) {
                if (data) {
                    InterviewInitModel *model = [InterviewInitModel mj_objectWithKeyValues:data];
                    
                    InterviewNoteNoticeViewController *vc = [InterviewNoteNoticeViewController new];
                    vc.model = model;
                    [self.navigationController pushViewController:vc animated:YES];
                }
            });
        }
        
        if ([btn.titleLabel.text isEqualToString:@"取消面试"]){
            NSMutableDictionary *dataDic = [NSMutableDictionary dictionary];
            [dataDic setValue:NSStringFromInteger(list.metting_id) forKey:@"mettingId"];
            
            NSMutableDictionary *paramDic = [NSMutableDictionary dictionary];
            [paramDic setValue:[dataDic mj_JSONString] forKey:@"data"];
            [paramDic setValue:AppDelegateInstance.token forKey:@"token"];
            
            [[RHNetAPIManager sharedManager]appComCancelMettingOPT:paramDic].start(^(id data, NSString *msg, NSInteger code, NSError *error) {
                if (data) {
                    [HUD showHUDError:nil title:@"已取消"];
                    _pageNum = 1;
                    [self requestListData];
                }
            });
        }
        
        if ([btn.titleLabel.text isEqualToString:@"面试反馈"]) {
            CJChoseAlertView *alert = [CJChoseAlertView CJChoseAlertViewWithTitle:@"面试反馈" ChoseBtnTitleArr:@[@"通过面试",@"未通过面试"] btnTitleArr:@[@"取消",@"确定"] BtnBlock:^(NSInteger index, NSInteger choseIndex) {
                
                if (index == 1) {
                    NSLog(@"%ld",choseIndex);
                    NSMutableDictionary *dataDic = [NSMutableDictionary dictionary];
                    [dataDic setValue:NSStringFromInteger(list.metting_id) forKey:@"mettingId"];
                    [dataDic setValue:NSStringFromInteger(choseIndex) forKey:@"resultType"];
                    
                    NSMutableDictionary *paramDic = [NSMutableDictionary dictionary];
                    [paramDic setValue:[dataDic mj_JSONString] forKey:@"data"];
                    [paramDic setValue:AppDelegateInstance.token forKey:@"token"];
                    
                    [[RHNetAPIManager sharedManager]appPassMettingOPT:paramDic].start(^(id data, NSString *msg, NSInteger code, NSError *error) {
                        if (data) {
                            [HUD showHUDError:nil title:@"已反馈"];
                            _pageNum = 1;
                            [self requestListData];
                        }
                    });
                }
            }];
            [alert show];
        }
        if ([btn.titleLabel.text isEqualToString:@"不合适"]){
            InterviewReasonAlertView *alert = [InterviewReasonAlertView interViewReasonAlertWithTitle:@"理由选择" name:@"李潇潇" phone:@"13222225555" position:@"产品经理" btnTitleArr:@[@"取消",@"确定"] btnBlock:^(NSInteger index, NSString * _Nonnull reasonText) {
                
                if (index == 1) {
                    NSLog(@"%@",reasonText);
                    if (reasonText.length == 0) {
                        [HUD showHUDError:nil title:@"请填写拒绝原因"];
                        return;
                    }
                    NSMutableDictionary *dataDic = [NSMutableDictionary dictionary];
                    [dataDic setValue:NSStringFromInteger(list.metting_id) forKey:@"mettingId"];
                    [dataDic setValue:reasonText forKey:@"refuseMsg"];
                    
                    NSMutableDictionary *paramDic = [NSMutableDictionary dictionary];
                    [paramDic setValue:[dataDic mj_JSONString] forKey:@"data"];
                    [paramDic setValue:AppDelegateInstance.token forKey:@"token"];
                    
                    [[RHNetAPIManager sharedManager]appNoSuitableOPT:paramDic].start(^(id data, NSString *msg, NSInteger code, NSError *error) {
                        if (data) {
                            [HUD showHUDError:nil title:msg];
                            _pageNum = 1;
                            [self requestListData];
                        }
                    });
                }
            }];
            [alert show];
        }
       
        if ([btn.titleLabel.text isEqualToString:@"与他联系"]){
            ChatViewController *vc = [ChatViewController new];
            vc.sendId = NSStringFromInteger(list.interview_user_id);
            //self.model.data.resume.tCjUserLoginDto.ID//简历所属用户的id
            vc.resumeId = NSStringFromInteger(list.resume_id);
            [self.navigationController pushViewController:vc animated:YES];
        }
         // TODO: 未完成
        if ([btn.titleLabel.text isEqualToString:@"查看理由"]){
            
        }
        
        if ([btn.titleLabel.text isEqualToString:@"复制编号"]){
            UIPasteboard *pasteboard = [UIPasteboard generalPasteboard];
            pasteboard.string = list.metting_sequence;
            [HUD showHUDError:nil title:@"已复制"];
        }
        
    };
    return cell;
    
    
}
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    ResumeDetailViewController *vc = [ResumeDetailViewController new];
    vc.resumeId = NSStringFromInteger(self.dataSource[indexPath.row].resume_id);
    [self.navigationController pushViewController:vc animated:YES];
}
//-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
//    if (self.topBtnArr[3].selected){
//        return Size(260/2 + 98/2 + 40 + 5);
//    }
//    return Size(358/2 + 5);
//}
#pragma mark - 懒加载
-(NSMutableDictionary *)paramDataDic{
    if (!_paramDataDic) {
        _paramDataDic = [NSMutableDictionary dictionary];
    }
    return _paramDataDic;
}

-(NSMutableArray<UIButton *> *)topBtnArr{
    if (!_topBtnArr) {
        _topBtnArr = [NSMutableArray array];
    }
    return _topBtnArr;
}
/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
