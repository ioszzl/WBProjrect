//
//  ChoseTradeViewController.m
//  ChuJinZhaoPin
//
//  Created by eims on 2018/11/2.
//  Copyright © 2018 Monster. All rights reserved.
//

#import "ChoseTradeViewController.h"
#import "SearchHistoryTableViewCell.h"
#import "TradeModel.h"
@interface ChoseTradeViewController ()<UITableViewDelegate,UITableViewDataSource>
{
    NSArray *tradeArr1;
    NSArray *tradeArr2;
}
@property (nonatomic, strong) UILabel *countLab;

@property (nonatomic, strong) UITableView *tableV;
@property (nonatomic, strong) UIScrollView *leftScrollV;
@property (nonatomic, strong) NSArray *dataSource;
@property (nonatomic, strong) NSMutableArray<UIButton *> *classBtnArr;
@property (nonatomic, strong) NSMutableArray *tradeArr;
@property (nonatomic, strong) NSArray *classArr;

@property (nonatomic, assign) NSInteger tradeID;

@property (nonatomic, strong) TradeModel *model;


@end

@implementation ChoseTradeViewController
@synthesize defaultDic = _defaultDic;

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
//    tradeArr1 = @[@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件",@"计算机软件"];
    
//    tradeArr2 = @[@"建筑/房地产",@"建筑/房地产",@"建筑/房地产",@"建筑/房地产",@"建筑/房地产",@"建筑/房地产",@"建筑/房地产",@"建筑/房地产",@"建筑/房地产",@"建筑/房地产",@"建筑/房地产",@"建筑/房地产",@"建筑/房地产",@"建筑/房地产",@"建筑/房地产",@"建筑/房地产",@"建筑/房地产",@"建筑/房地产",@"建筑/房地产",@"建筑/房地产"];
    
    [self initUI];
    
    [self requestData];
}
-(void)initUI{
    self.title = @"选择行业";
    if (!self.multipleCount) {
        self.multipleCount = 3;
    }
    
    UIBarButtonItem *saveBarItem = [[UIBarButtonItem alloc]initWithTitle:@"保存" style:UIBarButtonItemStylePlain target:self action:@selector(doSave)];
    [saveBarItem setTitleTextAttributes:@{NSFontAttributeName:[UIFont systemFontOfSize:Size(14)]} forState:UIControlStateNormal];
    self.navigationItem.rightBarButtonItem = saveBarItem;
    
    _countLab = [UILabel ym_labelWithFrame:CGRectZero font:[UIFont systemFontOfSize:Size(10)] textColor:COLOR_MAIN];
    _countLab.text = [NSString stringWithFormat:@"（%ld/%ld）",self.tradeArr.count,self.multipleCount];
    [self.view addSubview:_countLab];
    [_countLab mas_makeConstraints:^(MASConstraintMaker *make) {
        make.right.mas_offset(Size(-10));
        make.top.mas_offset(Size(10));
    }];
    
    UILabel *choseLab = [UILabel ym_labelWithFrame:CGRectZero font:[UIFont systemFontOfSize:Size(10)] textColor:COLOR_RGB_51];
    choseLab.text = @"已选";
    [self.view addSubview:choseLab];
    [choseLab mas_makeConstraints:^(MASConstraintMaker *make) {
        make.right.equalTo(_countLab.mas_left);
        make.top.equalTo(_countLab);
    }];
    
    UIView *topLine = [UIView new];
    topLine.backgroundColor = RGBCOLOR(230, 230, 230);
    [self.view addSubview:topLine];
    [topLine mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.right.mas_offset(0);
        make.top.mas_offset(Size(30)-0.5);
        make.height.mas_equalTo(0.5);
    }];
    
    UIView *centerline = [UIView new];
    centerline.backgroundColor = RGBCOLOR(230, 230, 230);
    [self.view addSubview:centerline];
    [centerline mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerX.mas_equalTo(self.view);
        make.top.equalTo(topLine.mas_bottom);
        make.bottom.mas_offset(0);
        make.width.mas_equalTo(0.5);
    }];
    
    
    _leftScrollV = [UIScrollView new];
    _leftScrollV.backgroundColor = RGBCOLOR(255, 255, 255);
    _leftScrollV.showsVerticalScrollIndicator = NO;
    [self.view addSubview:_leftScrollV];
    [_leftScrollV mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(topLine.mas_bottom);
        make.left.mas_offset(0);
        make.right.equalTo(centerline.mas_left);
        make.bottom.mas_offset(0);
        
    }];
    
    
    

    _tableV = [[UITableView alloc]initWithFrame:CGRectZero style:UITableViewStylePlain];
    _tableV.tableFooterView = [UIView new];
    _tableV.separatorStyle = UITableViewCellSeparatorStyleNone;
    _tableV.showsVerticalScrollIndicator = NO;
    _tableV.showsHorizontalScrollIndicator = NO;
    _tableV.backgroundColor = HEXRGBCOLOR(0xffffff);
    _tableV.dataSource = self;
    _tableV.delegate = self;
    [self.view addSubview:_tableV];
    [_tableV mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.mas_equalTo(centerline.mas_right);
        make.top.equalTo(topLine.mas_bottom);
        make.right.mas_offset(0);
        make.bottom.mas_offset(0);
    }];
    
}
-(void)setClassArr:(NSArray *)classArr{
    _classArr = classArr;
    
    for (int i=0; i<classArr.count; i++) {
        Children *data = classArr[i];
        UIButton *btn = [UIButton ym_ButtonWithFrame:CGRectZero title:data.label backgroundColor:nil titleColor:COLOR_RGB_153 titleSize:Size(14)];
        [btn setTitleColor:COLOR_MAIN forState:UIControlStateSelected];
        [_leftScrollV addSubview:btn];
        [btn mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.right.mas_offset(0);
            make.width.equalTo(_leftScrollV);
            make.height.mas_equalTo(Size(98/2));
            make.top.mas_offset((Size(98/2) + 0.5) * i);
        }];
        btn.tag = i;
        [btn addTarget:self action:@selector(doClassBtn:) forControlEvents:UIControlEventTouchUpInside];
        
        [self.classBtnArr addObject:btn];
        
        UIView *line = [UIView new];
        line.backgroundColor = RGBCOLOR(230, 230, 230);
        [_leftScrollV addSubview:line];
        [line mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.right.mas_offset(0);
            make.top.equalTo(btn.mas_bottom);
            make.height.mas_equalTo(0.5);
        }];
        
        if (i == classArr.count-1) {
            [_leftScrollV mas_makeConstraints:^(MASConstraintMaker *make) {
                make.bottom.equalTo(btn.mas_bottom);
            }];
        }
        
        if (self.tradeID == data.value) {
            [self doClassBtn:self.classBtnArr[i]];
        }
    }
    
}
-(void)requestData{
    [[RHNetAPIManager sharedManager]appFindWorkClassListOPT].start(^(id data, NSString *msg, NSInteger code, NSError *error) {
        if (data) {
            self.model = [TradeModel mj_objectWithKeyValues:data];
            if (!self.tradeID) {
                self.tradeID = self.model.data[0].value;
            }
            self.classArr = self.model.data;
        }
    });
}
-(void)setDefaultDic:(NSMutableDictionary *)defaultDic{
    _defaultDic = defaultDic;
    self.tradeID = [defaultDic[@"tradeID"] integerValue];
    [self.tradeArr addObjectsFromArray:defaultDic[@"tradeArr"]];
    self.countLab.text = [NSString stringWithFormat:@"（%ld/%ld）",self.tradeArr.count,self.multipleCount];
    
    [self.tableV reloadData];
}

#pragma mark - action
-(void)doSave{
    BLOCK_EXEC(self.tradeSelectedBlock,@{@"tradeID":@(self.tradeID),@"tradeArr":self.tradeArr});
    [self.navigationController popViewControllerAnimated:YES];
}

-(void)doClassBtn:(UIButton *)btn{
    
    for (UIButton *bttn in self.classBtnArr) {
        bttn.selected = NO;
    }
    btn.selected = YES;
    if (self.model.data[btn.tag].value != self.tradeID) {
        [self.tradeArr removeAllObjects];
        self.countLab.text = [NSString stringWithFormat:@"（%ld/%ld）",self.tradeArr.count,self.multipleCount];
    }
    self.tradeID = self.model.data[btn.tag].value;
    
    self.dataSource = self.model.data[btn.tag].children;
    
    [self.tableV reloadData];
}

#pragma make - tableView delegate
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return self.dataSource.count;
}
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    Children *child = (Children *)self.dataSource[indexPath.row];
    CELL_DEFINE(SearchHistoryTableViewCell);
    
    if ([self haveTrade:[self.tradeArr copy] with:child]) {
        cell.contentLab.textColor = COLOR_MAIN;
    }else{
        cell.contentLab.textColor = COLOR_RGB_51;
    }
    cell.deleteBtn.hidden = YES;
    
    cell.contentLab.text = child.label;
    return cell;
}
-(BOOL)haveTrade:(NSArray *)tradeArr with:(Children *)child{
    for (Children *c in tradeArr) {
        if (c.value == child.value) {
            return YES;
        }
    }
    return NO;
}
-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    return Size(98/2);
}
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    
    Children *child = (Children *)self.dataSource[indexPath.row];
    
    if (self.multipleCount == 1) {
        [self.tradeArr removeAllObjects];
        [self.tradeArr addObject:child];
        self.countLab.text = [NSString stringWithFormat:@"（%ld/%ld）",self.tradeArr.count,self.multipleCount];
        BLOCK_EXEC(self.tradeSelectedBlock,@{@"tradeID":@(self.tradeID),@"tradeArr":self.tradeArr});
        [self.navigationController popViewControllerAnimated:YES];
        
        return;
    }
    
    if ([self haveTrade:[self.tradeArr copy] with:child]) {
        for (Children *c in self.tradeArr) {
            NSLog(@"%ld",c.value);
            if (c.value == child.value) {
                [self.tradeArr removeObject:c];
                break;
            }
        }
        
        [self.tableV reloadData];
    }else{
        if (self.tradeArr.count < self.multipleCount) {
            [self.tradeArr addObject:self.dataSource[indexPath.row]];
            [self.tableV reloadData];
        }else{
            [HUD showHUDError:nil title:[NSString stringWithFormat:@"不能超过%ld个",self.multipleCount]];
        }
    }
    self.countLab.text = [NSString stringWithFormat:@"（%ld/%ld）",self.tradeArr.count,self.multipleCount];
    
    
}



-(NSMutableArray<UIButton *> *)classBtnArr{
    if (!_classBtnArr) {
        _classBtnArr = [NSMutableArray array];
    }
    return _classBtnArr;
}

-(NSMutableArray *)tradeArr{
    if (!_tradeArr) {
        _tradeArr = [NSMutableArray array];
    }
    return _tradeArr;
}
-(NSMutableDictionary *)defaultDic{
    if (!_defaultDic) {
        _defaultDic = [NSMutableDictionary dictionary];
    }
    return _defaultDic;
}
/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
